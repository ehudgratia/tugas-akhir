labs(title = "Distribusi Data Stunting",
x = "Stunting",
y = "Frekuensi") +
theme_minimal()
table(hasil_mi$stunting)
set.seed(123)
data_index <- createDataPartition(hasil_mi$stunting, p = 0.7, list = FALSE)
data_train <- hasil_mi[data_index, ]
data_test <- hasil_mi[-data_index, ]
glimpse(data_train)
glimpse(data_test)
glimpse(data_train)
glimpse(data_test)
table(data_train$stunting)
table(data_test$stunting)
# Model default
set.seed(123)
rf_model1 <- randomForest(stunting ~ ., data = data_train,
ntree = 200,
mtry = floor(sqrt(ncol(data_train)-1)),
nodesize = 10,
maxnodes = 20,
importance = TRUE)
# Prediksi & evaluasi
pred_rf1 <- predict(rf_model1, data_test)
conf_matrix_rf1 <- confusionMatrix(pred_rf1, data_test$stunting)
## hasil
print(rf_model1)
print(conf_matrix_rf1)
# Ekstrak confusion matrix dari caret
cm_rfmodel1 <- as.data.frame(conf_matrix_rf1$table)
# Ganti nama kolom supaya konsisten
colnames(cm_rfmodel1) <- c("Prediction", "Reference", "Freq")
# Plot pakai ggplot2
ggplot(cm_rfmodel1, aes(x = Reference, y = Prediction, fill = Freq)) +
geom_tile(color = "black") +
geom_text(aes(label = Freq), size = 6) +
scale_fill_gradient(low = "white", high = "skyblue") +
labs(
title = "Confusion Matrix - rf_model1",
x = "Actual (Reference)",
y = "Predicted",
fill = "Count"
) +
theme_minimal() +
coord_fixed()
## hasil
print(rf_model1)
# Model 2: Lebih teratur dengan regularisasi
set.seed(123)
rf_model2 <- randomForest(stunting ~ ., data = data_train,
ntree = 300,  # Sedikit mengurangi jumlah pohon
mtry = floor(sqrt(ncol(data_train)-1)),
nodesize = 15,  # Ukuran node lebih besar
maxnodes = 30,  # Batas node lebih longgar
sampsize = 0.7*nrow(data_train), # Subsample data
importance = TRUE)
# Prediksi & evaluasi
pred_rf2 <- predict(rf_model2, data_test)
conf_matrix_rf2 <- confusionMatrix(pred_rf2, data_test$stunting)
## hasil
print(rf_model2)
print(conf_matrix_rf2)
# Ekstrak confusion matrix dari caret
cm_rfmodel2 <- as.data.frame(conf_matrix_rf2$table)
# Ganti nama kolom supaya konsisten
colnames(cm_rfmodel2) <- c("Prediction", "Reference", "Freq")
# Plot pakai ggplot2
ggplot(cm_rfmodel2, aes(x = Reference, y = Prediction, fill = Freq)) +
geom_tile(color = "black") +
geom_text(aes(label = Freq), size = 6) +
scale_fill_gradient(low = "white", high = "skyblue") +
labs(
title = "Confusion Matrix - rf_model2",
x = "Actual (Reference)",
y = "Predicted",
fill = "Count"
) +
theme_minimal() +
coord_fixed()
## hasil
print(rf_model2)
# Model 3: Konfigurasi sangat konservatif
set.seed(123)
rf_model3 <- randomForest(stunting ~ ., data = data_train,
ntree = 150,
mtry = max(floor(ncol(data_train)/3), 3),
nodesize = 25,
maxnodes = 15,
strata = data_train$stunting,  # Stratified sampling
sampsize = c("0" = 500, "1" = 500),  # Balanced subsample
importance = TRUE)
# Prediksi & evaluasi
pred_rf3 <- predict(rf_model3, data_test)
conf_matrix_rf3 <- confusionMatrix(pred_rf3, data_test$stunting)
## hasil
print(rf_model3)
print(conf_matrix_rf3)
# Ekstrak confusion matrix dari caret
cm_rfmodel3 <- as.data.frame(conf_matrix_rf3$table)
# Ganti nama kolom supaya konsisten
colnames(cm_rfmodel3) <- c("Prediction", "Reference", "Freq")
# Plot
ggplot(cm_rfmodel3, aes(x = Reference, y = Prediction, fill = Freq)) +
geom_tile(color = "black") +
geom_text(aes(label = Freq), size = 6) +
scale_fill_gradient(low = "white", high = "skyblue") +
labs(
title = "Confusion Matrix - rf_model3",
x = "Actual (Reference)",
y = "Predicted",
fill = "Count"
) +
theme_minimal() +
coord_fixed()
# Prediksi & evaluasi
pred_rf3 <- predict(rf_model3, data_test)
conf_matrix_rf3 <- confusionMatrix(pred_rf3, data_test$stunting)
## hasil
print(rf_model3)
# Model default
svm_model1 <-svm(stunting ~., data = data_train,
kernel='radial',
cost = 100,
gamma = 0.1)
# Prediksi dan Evaluasi
pred_svm1 <- predict(svm_model1, data_test)
conf_matrix_svm1 <- confusionMatrix(pred_svm1, data_test$stunting)
# Hasil model svm
print(svm_model1)
print(conf_matrix_svm1)
# Ekstrak confusion matrix dari caret
cm_svmmodel1 <- as.data.frame(conf_matrix_svm1$table)
# Ganti nama kolom supaya konsisten
colnames(cm_svmmodel1) <- c("Prediction", "Reference", "Freq")
# Plot pakai ggplot2
ggplot(cm_svmmodel1, aes(x = Reference, y = Prediction, fill = Freq)) +
geom_tile(color = "black") +
geom_text(aes(label = Freq), size = 6) +
scale_fill_gradient(low = "white", high = "skyblue") +
labs(
title = "Confusion Matrix - svm_model1",
x = "Actual (Reference)",
y = "Predicted",
fill = "Count"
) +
theme_minimal() +
coord_fixed()
# Model 2: Kernel radial dengan regularisasi lebih ketat
svm_model2 <- svm(stunting ~., data = data_train,
kernel = 'radial',
cost = 10,  # Regularisasi lebih kuat
gamma = 0.01,  # Pengaruh titik data lebih kecil
class.weights = c("0" = 1, "1" = 2))  # Menangani ketidakseimbangan kelas
# Prediksi dan Evaluasi
pred_svm2 <- predict(svm_model2, data_test)
conf_matrix_svm2 <- confusionMatrix(pred_svm2, data_test$stunting)
# Hasil model svm
print(svm_model2)
print(conf_matrix_svm2)
# Ekstrak confusion matrix dari caret
cm_svmmodel2 <- as.data.frame(conf_matrix_svm2$table)
# Ganti nama kolom supaya konsisten
colnames(cm_svmmodel2) <- c("Prediction", "Reference", "Freq")
# Plot pakai ggplot2
ggplot(cm_svmmodel2, aes(x = Reference, y = Prediction, fill = Freq)) +
geom_tile(color = "black") +
geom_text(aes(label = Freq), size = 6) +
scale_fill_gradient(low = "white", high = "skyblue") +
labs(
title = "Confusion Matrix - svm_model2",
x = "Actual (Reference)",
y = "Predicted",
fill = "Count"
) +
theme_minimal() +
coord_fixed()
# Model 3: Kernel polynomial dengan regularisasi
svm_model3 <- svm(stunting ~., data = data_train,
kernel = 'polynomial',
cost = 0.5,  # Margin lebih lebar
scale = TRUE,  # Scaling otomatis
class.weights = c("0" = 1, "1" = 1.5))  # Bobot kelas
# Prediksi dan Evaluasi
pred_svm3 <- predict(svm_model3, data_test)
conf_matrix_svm3 <- confusionMatrix(pred_svm3, data_test$stunting)
# Hasil model svm
print(svm_model3)
print(conf_matrix_svm3)
# Ekstrak confusion matrix dari caret
cm_svmmodel3 <- as.data.frame(conf_matrix_svm3$table)
# Ganti nama kolom supaya konsisten
colnames(cm_svmmodel3) <- c("Prediction", "Reference", "Freq")
# Plot pakai ggplot2
ggplot(cm_svmmodel3, aes(x = Reference, y = Prediction, fill = Freq)) +
geom_tile(color = "black") +
geom_text(aes(label = Freq), size = 6) +
scale_fill_gradient(low = "white", high = "skyblue") +
labs(
title = "Confusion Matrix - svm_model3",
x = "Actual (Reference)",
y = "Predicted",
fill = "Count"
) +
theme_minimal() +
coord_fixed()
# Extract Metrics RF
metrics_rf1 <- conf_matrix_rf1$byClass[c("Precision", "Recall", "F1")]
accuracy_rf1 <- conf_matrix_rf1$overall["Accuracy"]
metrics_rf2 <- conf_matrix_rf2$byClass[c("Precision", "Recall", "F1")]
accuracy_rf2 <- conf_matrix_rf2$overall["Accuracy"]
metrics_rf3 <- conf_matrix_rf3$byClass[c("Precision", "Recall", "F1")]
accuracy_rf3 <- conf_matrix_rf3$overall["Accuracy"]
# Gabungkan semua metrik ke dalam satu tibble
metrics_rf <- bind_rows(
tibble(Model = "rf_model1",
Metric = c("Precision", "Recall", "F1", "Accuracy"),
Value = c(conf_matrix_rf1$byClass[c("Precision", "Recall", "F1")],
conf_matrix_rf1$overall["Accuracy"])),
tibble(Model = "rf_model2",
Metric = c("Precision", "Recall", "F1", "Accuracy"),
Value = c(conf_matrix_rf2$byClass[c("Precision", "Recall", "F1")],
conf_matrix_rf2$overall["Accuracy"])),
tibble(Model = "rf_model3",
Metric = c("Precision", "Recall", "F1", "Accuracy"),
Value = c(conf_matrix_rf3$byClass[c("Precision", "Recall", "F1")],
conf_matrix_rf3$overall["Accuracy"]))
)
# Visualisasi
ggplot(metrics_rf, aes(x = Metric, y = Value, fill = Model)) +
geom_bar(stat = "identity", position = position_dodge(0.8), width = 0.7) +
geom_text(aes(label = round(Value, 3)),
position = position_dodge(0.8),
vjust = -0.5,
size = 3) +
labs(title = "Perbandingan Model Random Forest",
y = "Nilai Metrik",
x = "Metrix Evaluasi",
fill = "Model") +
theme_minimal()
# Extract Metrics SVM
metrics_svm1 <- conf_matrix_svm1$byClass[c("Precision", "Recall", "F1")]
accuracy_svm1 <- conf_matrix_svm1$overall["Accuracy"]
metrics_svm2 <- conf_matrix_svm2$byClass[c("Precision", "Recall", "F1")]
accuracy_svm2 <- conf_matrix_svm2$overall["Accuracy"]
metrics_svm3 <- conf_matrix_svm3$byClass[c("Precision", "Recall", "F1")]
accuracy_svm3 <- conf_matrix_svm3$overall["Accuracy"]
# Gabungkan semua metrik ke dalam satu tibble
metrics_svm <- bind_rows(
tibble(Model = "svm_model1",
Metric = c("Recall", "Precision", "F1", "Accuracy"),
Value = c(conf_matrix_svm1$byClass[c("Precision", "Recall", "F1")],
conf_matrix_svm1$overall["Accuracy"])),
tibble(Model = "svm_model2",
Metric = c("Recall", "Precision", "F1", "Accuracy"),
Value = c(conf_matrix_svm2$byClass[c("Precision", "Recall", "F1")],
conf_matrix_svm2$overall["Accuracy"])),
tibble(Model = "svm_model3",
Metric = c("Recall", "Precision", "F1", "Accuracy"),
Value = c(conf_matrix_svm3$byClass[c("Precision", "Recall", "F1")],
conf_matrix_svm3$overall["Accuracy"]))
)
# Visualisasi
ggplot(metrics_svm, aes(x = Metric, y = Value, fill = Model)) +
geom_bar(stat = "identity", position = position_dodge(0.8), width = 0.7) +
geom_text(aes(label = round(Value, 3)),
position = position_dodge(0.8),
vjust = -0.5,
size = 3) +
labs(title = "Perbandingan Model SVM",
y = "Nilai Metrik",
x = "Metrix Evaluasi",
fill = "Model") +
theme_minimal()
# RF vs SVM
metrics_rf_svm <- tibble(
Metric = c("Accuracy", "Recall", "Precision", "F1-score"),
RF = c(accuracy_rf2, metrics_rf2),
SVM = c(accuracy_svm1, metrics_svm1)
) %>%
pivot_longer(cols = c(RF, SVM), names_to = "Model", values_to = "Value")
# Visualisasi
ggplot(metrics_rf_svm, aes(x = Metric, y = Value, fill = Model)) +
geom_col(position = position_dodge(width = 0.7), width = 0.6) +
geom_text(aes(label = round(Value, 3)),
position = position_dodge(width = 0.7),
vjust = -0.5, size = 3) +
scale_fill_manual(values = c("RF" = "#1b9e77", "SVM" = "#d95f02")) +
labs(title = "Perbandingan Kinerja Random Forest vs SVM",
y = "Nilai Metrik",
x = "Metrik Evaluasi") +
theme_minimal()
# Buat objek prediktor SVM
predictor_svm1 <- Predictor$new(
model = svm_model1,
data = data_test[, -which(names(data_test) == "stunting")],
y = data_test$stunting
)
# Melakukan Permutation importance
imp_svm1 <- FeatureImp$new(predictor_svm1, loss = "ce", compare = "difference")
# Ambil hasil importance dari model
df_svm1 <- as.data.frame(imp_svm1$results)
# Visualisasi importance
ggplot(df_svm1, aes(x = reorder(feature, importance), y = importance)) +
geom_bar(stat = "identity", fill = "blue") +
coord_flip() +
labs(
title = "Feature Importance SVM",
x = "Fitur",
y = "Importance (Penurunan Akurasi)"
) +
theme_minimal()
# Visualisasi
ggplot(metrics_rf, aes(x = Metric, y = Value, fill = Model)) +
geom_bar(stat = "identity", position = position_dodge(0.8), width = 0.7) +
geom_text(aes(label = round(Value, 3)),
position = position_dodge(0.8),
vjust = -0.5,
size = 3) +
labs(title = "Perbandingan Model Random Forest",
y = "Nilai Metrik",
x = "Metrix Evaluasi",
fill = "Model") +
theme_minimal()
# Gabungkan semua metrik ke dalam satu tibble
metrics_rf <- bind_rows(
tibble(Model = "rf_model1",
Metric = c("Recall", "Precision", "F1", "Accuracy"),
Value = c(conf_matrix_rf1$byClass[c("Precision", "Recall", "F1")],
conf_matrix_rf1$overall["Accuracy"])),
tibble(Model = "rf_model2",
Metric = c("Recall", "Precision", "F1", "Accuracy"),
Value = c(conf_matrix_rf2$byClass[c("Precision", "Recall", "F1")],
conf_matrix_rf2$overall["Accuracy"])),
tibble(Model = "rf_model3",
Metric = c("Recall", "Precision", "F1", "Accuracy"),
Value = c(conf_matrix_rf3$byClass[c("Precision", "Recall", "F1")],
conf_matrix_rf3$overall["Accuracy"]))
)
# Visualisasi
ggplot(metrics_rf, aes(x = Metric, y = Value, fill = Model)) +
geom_bar(stat = "identity", position = position_dodge(0.8), width = 0.7) +
geom_text(aes(label = round(Value, 3)),
position = position_dodge(0.8),
vjust = -0.5,
size = 3) +
labs(title = "Perbandingan Model Random Forest",
y = "Nilai Metrik",
x = "Metrix Evaluasi",
fill = "Model") +
theme_minimal()
# Gabungkan semua metrik ke dalam satu tibble
metrics_rf <- bind_rows(
tibble(Model = "rf_model1",
Metric = c("Recall", "Precision", "F1", "Accuracy"),
Value = c(conf_matrix_rf1$byClass[c("Precision", "Recall", "F1-Score")],
conf_matrix_rf1$overall["Accuracy"])),
tibble(Model = "rf_model2",
Metric = c("Recall", "Precision", "F1", "Accuracy"),
Value = c(conf_matrix_rf2$byClass[c("Precision", "Recall", "F1-Score")],
conf_matrix_rf2$overall["Accuracy"])),
tibble(Model = "rf_model3",
Metric = c("Recall", "Precision", "F1", "Accuracy"),
Value = c(conf_matrix_rf3$byClass[c("Precision", "Recall", "F1-Score")],
conf_matrix_rf3$overall["Accuracy"]))
)
# Visualisasi
ggplot(metrics_rf, aes(x = Metric, y = Value, fill = Model)) +
geom_bar(stat = "identity", position = position_dodge(0.8), width = 0.7) +
geom_text(aes(label = round(Value, 3)),
position = position_dodge(0.8),
vjust = -0.5,
size = 3) +
labs(title = "Perbandingan Model Random Forest",
y = "Nilai Metrik",
x = "Metrix Evaluasi",
fill = "Model") +
theme_minimal()
# Extract Metrics RF
metrics_rf1 <- conf_matrix_rf1$byClass[c("Precision", "Recall", "F1-Score")]
accuracy_rf1 <- conf_matrix_rf1$overall["Accuracy"]
metrics_rf2 <- conf_matrix_rf2$byClass[c("Precision", "Recall", "F1-Score")]
accuracy_rf2 <- conf_matrix_rf2$overall["Accuracy"]
metrics_rf3 <- conf_matrix_rf3$byClass[c("Precision", "Recall", "F1-Score")]
accuracy_rf3 <- conf_matrix_rf3$overall["Accuracy"]
# Gabungkan semua metrik ke dalam satu tibble
metrics_rf <- bind_rows(
tibble(Model = "rf_model1",
Metric = c("Recall", "Precision", "F1", "Accuracy"),
Value = c(conf_matrix_rf1$byClass[c("Precision", "Recall", "F1-Score")],
conf_matrix_rf1$overall["Accuracy"])),
tibble(Model = "rf_model2",
Metric = c("Recall", "Precision", "F1", "Accuracy"),
Value = c(conf_matrix_rf2$byClass[c("Precision", "Recall", "F1-Score")],
conf_matrix_rf2$overall["Accuracy"])),
tibble(Model = "rf_model3",
Metric = c("Recall", "Precision", "F1", "Accuracy"),
Value = c(conf_matrix_rf3$byClass[c("Precision", "Recall", "F1-Score")],
conf_matrix_rf3$overall["Accuracy"]))
)
# Visualisasi
ggplot(metrics_rf, aes(x = Metric, y = Value, fill = Model)) +
geom_bar(stat = "identity", position = position_dodge(0.8), width = 0.7) +
geom_text(aes(label = round(Value, 3)),
position = position_dodge(0.8),
vjust = -0.5,
size = 3) +
labs(title = "Perbandingan Model Random Forest",
y = "Nilai Metrik",
x = "Metrix Evaluasi",
fill = "Model") +
theme_minimal()
# Extract Metrics RF
metrics_rf1 <- conf_matrix_rf1$byClass[c("Precision", "Recall", "F1")]
accuracy_rf1 <- conf_matrix_rf1$overall["Accuracy"]
metrics_rf2 <- conf_matrix_rf2$byClass[c("Precision", "Recall", "F1")]
accuracy_rf2 <- conf_matrix_rf2$overall["Accuracy"]
metrics_rf3 <- conf_matrix_rf3$byClass[c("Precision", "Recall", "F1")]
accuracy_rf3 <- conf_matrix_rf3$overall["Accuracy"]
# Gabungkan semua metrik ke dalam satu tibble
metrics_rf <- bind_rows(
tibble(Model = "rf_model1",
Metric = c("Recall", "Precision", "F1", "Accuracy"),
Value = c(conf_matrix_rf1$byClass[c("Precision", "Recall", "F1")],
conf_matrix_rf1$overall["Accuracy"])),
tibble(Model = "rf_model2",
Metric = c("Recall", "Precision", "F1", "Accuracy"),
Value = c(conf_matrix_rf2$byClass[c("Precision", "Recall", "F1")],
conf_matrix_rf2$overall["Accuracy"])),
tibble(Model = "rf_model3",
Metric = c("Recall", "Precision", "F1", "Accuracy"),
Value = c(conf_matrix_rf3$byClass[c("Precision", "Recall", "F1")],
conf_matrix_rf3$overall["Accuracy"]))
)
# Visualisasi
ggplot(metrics_rf, aes(x = Metric, y = Value, fill = Model)) +
geom_bar(stat = "identity", position = position_dodge(0.8), width = 0.7) +
geom_text(aes(label = round(Value, 3)),
position = position_dodge(0.8),
vjust = -0.5,
size = 3) +
labs(title = "Perbandingan Model Random Forest",
y = "Nilai Metrik",
x = "Metrix Evaluasi",
fill = "Model") +
theme_minimal()
# RF vs SVM
metrics_rf_svm <- tibble(
Metric = c("Accuracy", "Recall", "Precision", "F1-score"),
RF = c(accuracy_rf2, metrics_rf2),
SVM = c(accuracy_svm1, metrics_svm1)
) %>%
pivot_longer(cols = c(RF, SVM), names_to = "Model", values_to = "Value")
# Visualisasi
ggplot(metrics_rf_svm, aes(x = Metric, y = Value, fill = Model)) +
geom_col(position = position_dodge(width = 0.7), width = 0.6) +
geom_text(aes(label = round(Value, 3)),
position = position_dodge(width = 0.7),
vjust = -0.5, size = 3) +
scale_fill_manual(values = c("RF" = "#1b9e77", "SVM" = "#d95f02")) +
labs(title = "Perbandingan Kinerja Random Forest vs SVM",
y = "Nilai Metrik",
x = "Metrik Evaluasi") +
theme_minimal()
# Visualisasi importance
ggplot(df_svm1, aes(x = reorder(feature, importance), y = importance)) +
geom_bar(stat = "identity", fill = "blue") +
coord_flip() +
labs(
title = "Feature Importance SVM",
x = "Fitur",
y = "Importance (Penurunan Akurasi)"
) +
theme_minimal()
# Library yang berisi kumpulan packages untuk analisis data
library(tidyverse)
# library untuk manipulasi data
library(dplyr)
# library untuk menampilkan hasil statistik deskriptif
library(summarytools)
# library untuk visualisasi data
library (ggplot2)
#Mengabungkan visualisasi
library(gridExtra)
# library untuk membaca data dari file Excel (.xlsx)
library(readxl)
library(caret)
#Correlation Matrix
library(corrplot)
# Visualisasi Correlation Matrix
library(ggcorrplot)
library(ranger)
library(randomForest)
library(pROC)
library(boot)
library(caTools)
library(e1071)
library(reshape2)
library(iml)
library(mlr)
library(FSelectorRcpp)
stunting
# Visualisasi importance
ggplot(df_svm1, aes(x = reorder(feature, importance), y = importance)) +
geom_bar(stat = "identity", fill = "blue") +
coord_flip() +
labs(
title = "Feature Importance SVM",
x = "Fitur",
y = "Importance (Penurunan Akurasi)"
) +
theme_minimal()
