pred_rf1 <- predict(rf_model1, data_test)
conf_matrix_rf1 <- confusionMatrix(pred_rf1, data_test$stunting)
## hasil
print(rf_model1)
print(conf_matrix_rf1)
set.seed(123)
rf_model1 <- randomForest(stunting ~ ., data = data_train,
ntree = 200,
mtry = floor(sqrt(ncol(data_train)-1)),
nodesize = 3,
maxnodes = 15,
importance = TRUE)
# Prediksi & evaluasi
pred_rf1 <- predict(rf_model1, data_test)
conf_matrix_rf1 <- confusionMatrix(pred_rf1, data_test$stunting)
## hasil
print(rf_model1)
print(conf_matrix_rf1)
# Model default
set.seed(123)
rf_model1 <- randomForest(stunting ~ ., data = data_train,
ntree = 200,
mtry = floor(sqrt(ncol(data_train)-1)),
nodesize = 3,
maxnodes = 17,
importance = TRUE)
# Prediksi & evaluasi
pred_rf1 <- predict(rf_model1, data_test)
conf_matrix_rf1 <- confusionMatrix(pred_rf1, data_test$stunting)
## hasil
print(rf_model1)
print(conf_matrix_rf1)
# Model default
set.seed(123)
rf_model1 <- randomForest(stunting ~ ., data = data_train,
ntree = 200,
mtry = floor(sqrt(ncol(data_train)-1)),
nodesize = 3,
maxnodes = 20,
importance = TRUE)
# Prediksi & evaluasi
pred_rf1 <- predict(rf_model1, data_test)
conf_matrix_rf1 <- confusionMatrix(pred_rf1, data_test$stunting)
## hasil
print(rf_model1)
print(conf_matrix_rf1)
# Model default
set.seed(123)
rf_model1 <- randomForest(stunting ~ ., data = data_train,
ntree = 200,
mtry = floor(sqrt(ncol(data_train)-1)),
nodesize = 3,
maxnodes = 3,
importance = TRUE)
# Prediksi & evaluasi
pred_rf1 <- predict(rf_model1, data_test)
conf_matrix_rf1 <- confusionMatrix(pred_rf1, data_test$stunting)
## hasil
print(rf_model1)
print(conf_matrix_rf1)
# Model default
set.seed(123)
rf_model1 <- randomForest(stunting ~ ., data = data_train,
ntree = 200,
mtry = floor(sqrt(ncol(data_train)-1)),
nodesize = 3,
maxnodes = 5,
importance = TRUE)
# Prediksi & evaluasi
pred_rf1 <- predict(rf_model1, data_test)
conf_matrix_rf1 <- confusionMatrix(pred_rf1, data_test$stunting)
## hasil
print(rf_model1)
print(conf_matrix_rf1)
# Model default
set.seed(123)
rf_model1 <- randomForest(stunting ~ ., data = data_train,
ntree = 200,
mtry = floor(sqrt(ncol(data_train)-1)),
nodesize = 3,
maxnodes = 7,
importance = TRUE)
# Prediksi & evaluasi
pred_rf1 <- predict(rf_model1, data_test)
conf_matrix_rf1 <- confusionMatrix(pred_rf1, data_test$stunting)
## hasil
print(rf_model1)
print(conf_matrix_rf1)
set.seed(123)
rf_model1 <- randomForest(stunting ~ ., data = data_train,
ntree = 200,
mtry = floor(sqrt(ncol(data_train)-1)),
nodesize = 3,
maxnodes = 10,
importance = TRUE)
# Prediksi & evaluasi
pred_rf1 <- predict(rf_model1, data_test)
conf_matrix_rf1 <- confusionMatrix(pred_rf1, data_test$stunting)
## hasil
print(rf_model1)
print(conf_matrix_rf1)
# Model default
set.seed(123)
rf_model1 <- randomForest(stunting ~ ., data = data_train,
ntree = 200,
mtry = floor(sqrt(ncol(data_train)-1)),
nodesize = 5,
maxnodes = 5,
importance = TRUE)
# Prediksi & evaluasi
pred_rf1 <- predict(rf_model1, data_test)
conf_matrix_rf1 <- confusionMatrix(pred_rf1, data_test$stunting)
## hasil
print(rf_model1)
print(conf_matrix_rf1)
set.seed(123)
rf_model1 <- randomForest(stunting ~ ., data = data_train,
ntree = 200,
mtry = floor(sqrt(ncol(data_train)-1)),
nodesize = 5,
maxnodes = 7,
importance = TRUE)
# Prediksi & evaluasi
pred_rf1 <- predict(rf_model1, data_test)
conf_matrix_rf1 <- confusionMatrix(pred_rf1, data_test$stunting)
## hasil
print(rf_model1)
print(conf_matrix_rf1)
set.seed(123)
rf_model1 <- randomForest(stunting ~ ., data = data_train,
ntree = 200,
mtry = floor(sqrt(ncol(data_train)-1)),
nodesize = 5,
maxnodes = 10,
importance = TRUE)
# Prediksi & evaluasi
pred_rf1 <- predict(rf_model1, data_test)
conf_matrix_rf1 <- confusionMatrix(pred_rf1, data_test$stunting)
## hasil
print(rf_model1)
print(conf_matrix_rf1)
# Model default
set.seed(123)
rf_model1 <- randomForest(stunting ~ ., data = data_train,
ntree = 200,
mtry = floor(sqrt(ncol(data_train)-1)),
nodesize = 10,
maxnodes = 10,
importance = TRUE)
# Prediksi & evaluasi
pred_rf1 <- predict(rf_model1, data_test)
conf_matrix_rf1 <- confusionMatrix(pred_rf1, data_test$stunting)
## hasil
print(rf_model1)
print(conf_matrix_rf1)
set.seed(123)
rf_model1 <- randomForest(stunting ~ ., data = data_train,
ntree = 200,
mtry = floor(sqrt(ncol(data_train)-1)),
nodesize = 5,
maxnodes = 10,
importance = TRUE)
# Prediksi & evaluasi
pred_rf1 <- predict(rf_model1, data_test)
conf_matrix_rf1 <- confusionMatrix(pred_rf1, data_test$stunting)
## hasil
print(rf_model1)
print(conf_matrix_rf1)
set.seed(123)
rf_model1 <- randomForest(stunting ~ ., data = data_train,
ntree = 200,
mtry = floor(sqrt(ncol(data_train)-1)),
nodesize = 10,
maxnodes = 17,
importance = TRUE)
# Prediksi & evaluasi
pred_rf1 <- predict(rf_model1, data_test)
conf_matrix_rf1 <- confusionMatrix(pred_rf1, data_test$stunting)
## hasil
print(rf_model1)
print(conf_matrix_rf1)
# Model default
set.seed(123)
rf_model1 <- randomForest(stunting ~ ., data = data_train,
ntree = 200,
mtry = floor(sqrt(ncol(data_train)-1)),
nodesize = 10,
maxnodes = 20,
importance = TRUE)
# Prediksi & evaluasi
pred_rf1 <- predict(rf_model1, data_test)
conf_matrix_rf1 <- confusionMatrix(pred_rf1, data_test$stunting)
## hasil
print(rf_model1)
print(conf_matrix_rf1)
cv_rfmodel <- caret::train(
stunting ~ .,
data = data_train,
method = "rf",
trControl = ctrl
)
plot(cv_rfmodel)
pred_rf <- predict(cv_rfmodel, data_test)
conf_matrix_rf <- confusionMatrix(pred_rf, data_test$stunting,)
print(cv_rfmodel)
set.seed(123)
rf_model2 <- randomForest(stunting ~ ., data = data_train,
ntree = 200,
mtry = floor(sqrt(ncol(data_train)-1)),
nodesize = 10,
maxnodes = 20,
sampsize = 0.5*nrow(data_train),
importance = TRUE)
# Prediksi & evaluasi
pred_rf2 <- predict(rf_model2, data_test)
conf_matrix_rf2 <- confusionMatrix(pred_rf2, data_test$stunting)
## hasil
print(rf_model2)
print(conf_matrix_rf2)
set.seed(123)
rf_model2 <- randomForest(stunting ~ ., data = data_train,
ntree = 200,
mtry = floor(sqrt(ncol(data_train)-1)),
nodesize = 10,
maxnodes = 20,
sampsize = 0.6*nrow(data_train),
importance = TRUE)
# Prediksi & evaluasi
pred_rf2 <- predict(rf_model2, data_test)
conf_matrix_rf2 <- confusionMatrix(pred_rf2, data_test$stunting)
## hasil
print(rf_model2)
print(conf_matrix_rf2)
# Model 2: Lebih teratur dengan regularisasi
set.seed(123)
rf_model2 <- randomForest(stunting ~ ., data = data_train,
ntree = 200,
mtry = floor(sqrt(ncol(data_train)-1)),
nodesize = 10,
maxnodes = 20,
sampsize = 0.7*nrow(data_train),
importance = TRUE)
# Prediksi & evaluasi
pred_rf2 <- predict(rf_model2, data_test)
conf_matrix_rf2 <- confusionMatrix(pred_rf2, data_test$stunting)
## hasil
print(rf_model2)
print(conf_matrix_rf2)
# Model 2: Lebih teratur dengan regularisasi
set.seed(123)
rf_model2 <- randomForest(stunting ~ ., data = data_train,
ntree = 300,
mtry = floor(sqrt(ncol(data_train)-1)),
nodesize = 10,
maxnodes = 20,
sampsize = 0.7*nrow(data_train),
importance = TRUE)
# Prediksi & evaluasi
pred_rf2 <- predict(rf_model2, data_test)
conf_matrix_rf2 <- confusionMatrix(pred_rf2, data_test$stunting)
## hasil
print(rf_model2)
print(conf_matrix_rf2)
# Model 2: Lebih teratur dengan regularisasi
set.seed(123)
rf_model2 <- randomForest(stunting ~ ., data = data_train,
ntree = 300,
mtry = floor(sqrt(ncol(data_train)-1)),
nodesize = 10,
maxnodes = 20,
sampsize = 0.5*nrow(data_train),
importance = TRUE)
# Prediksi & evaluasi
pred_rf2 <- predict(rf_model2, data_test)
conf_matrix_rf2 <- confusionMatrix(pred_rf2, data_test$stunting)
## hasil
print(rf_model2)
print(conf_matrix_rf2)
set.seed(123)
rf_model2 <- randomForest(stunting ~ ., data = data_train,
ntree = 300,
mtry = floor(sqrt(ncol(data_train)-1)),
nodesize = 10,
maxnodes = 20,
sampsize = 0.6*nrow(data_train),
importance = TRUE)
# Prediksi & evaluasi
pred_rf2 <- predict(rf_model2, data_test)
conf_matrix_rf2 <- confusionMatrix(pred_rf2, data_test$stunting)
## hasil
print(rf_model2)
print(conf_matrix_rf2)
set.seed(123)
rf_model2 <- randomForest(stunting ~ ., data = data_train,
ntree = 300,
mtry = floor(sqrt(ncol(data_train)-1)),
nodesize = 10,
maxnodes = 20,
sampsize = 0.7*nrow(data_train),
importance = TRUE)
# Prediksi & evaluasi
pred_rf2 <- predict(rf_model2, data_test)
conf_matrix_rf2 <- confusionMatrix(pred_rf2, data_test$stunting)
## hasil
print(rf_model2)
print(conf_matrix_rf2)
# Model 2: Lebih teratur dengan regularisasi
set.seed(123)
rf_model2 <- randomForest(stunting ~ ., data = data_train,
ntree = 300,
mtry = floor(sqrt(ncol(data_train)-1)),
nodesize = 15,
maxnodes = 30,
sampsize = 0.7*nrow(data_train),
importance = TRUE)
# Prediksi & evaluasi
pred_rf2 <- predict(rf_model2, data_test)
conf_matrix_rf2 <- confusionMatrix(pred_rf2, data_test$stunting)
## hasil
print(rf_model2)
print(conf_matrix_rf2)
set.seed(123)
rf_model3 <- randomForest(stunting ~ ., data = data_train,
ntree = 150,
mtry = max(floor(ncol(data_train)/3), 3),
nodesize = 25,
maxnodes = 15,
strata = data_train$stunting,  # Stratified sampling
sampsize = c("0" = 100, "1" = 100),  # Balanced subsample
importance = TRUE)
# Prediksi & evaluasi
pred_rf3 <- predict(rf_model3, data_test)
conf_matrix_rf3 <- confusionMatrix(pred_rf3, data_test$stunting)
## hasil
print(rf_model3)
print(conf_matrix_rf3)
# Model 3: Konfigurasi sangat konservatif
set.seed(123)
rf_model3 <- randomForest(stunting ~ ., data = data_train,
ntree = 150,
mtry = max(floor(ncol(data_train)/3), 3),
nodesize = 25,
maxnodes = 15,
strata = data_train$stunting,  # Stratified sampling
sampsize = c("0" = 100, "1" = 100),  # Balanced subsample
importance = TRUE)
# Prediksi & evaluasi
pred_rf3 <- predict(rf_model3, data_test)
conf_matrix_rf3 <- confusionMatrix(pred_rf3, data_test$stunting)
## hasil
print(rf_model3)
print(conf_matrix_rf3)
# Model 3: Konfigurasi sangat konservatif
set.seed(123)
rf_model3 <- randomForest(stunting ~ ., data = data_train,
ntree = 150,
mtry = max(floor(ncol(data_train)/3), 3),
nodesize = 25,
maxnodes = 15,
strata = data_train$stunting,  # Stratified sampling
sampsize = c("0" = 200, "1" = 200),  # Balanced subsample
importance = TRUE)
# Prediksi & evaluasi
pred_rf3 <- predict(rf_model3, data_test)
conf_matrix_rf3 <- confusionMatrix(pred_rf3, data_test$stunting)
## hasil
print(rf_model3)
print(conf_matrix_rf3)
# Model 3: Konfigurasi sangat konservatif
set.seed(123)
rf_model3 <- randomForest(stunting ~ ., data = data_train,
ntree = 150,
mtry = max(floor(ncol(data_train)/3), 3),
nodesize = 25,
maxnodes = 15,
strata = data_train$stunting,  # Stratified sampling
sampsize = c("0" = 300, "1" = 300),  # Balanced subsample
importance = TRUE)
# Prediksi & evaluasi
pred_rf3 <- predict(rf_model3, data_test)
conf_matrix_rf3 <- confusionMatrix(pred_rf3, data_test$stunting)
## hasil
print(rf_model3)
print(conf_matrix_rf3)
set.seed(123)
rf_model3 <- randomForest(stunting ~ ., data = data_train,
ntree = 150,
mtry = max(floor(ncol(data_train)/3), 3),
nodesize = 25,
maxnodes = 15,
strata = data_train$stunting,  # Stratified sampling
sampsize = c("0" = 400, "1" = 400),  # Balanced subsample
importance = TRUE)
# Prediksi & evaluasi
pred_rf3 <- predict(rf_model3, data_test)
conf_matrix_rf3 <- confusionMatrix(pred_rf3, data_test$stunting)
## hasil
print(rf_model3)
print(conf_matrix_rf3)
set.seed(123)
rf_model3 <- randomForest(stunting ~ ., data = data_train,
ntree = 150,
mtry = max(floor(ncol(data_train)/3), 3),
nodesize = 25,
maxnodes = 15,
strata = data_train$stunting,  # Stratified sampling
sampsize = c("0" = 500, "1" = 500),  # Balanced subsample
importance = TRUE)
# Prediksi & evaluasi
pred_rf3 <- predict(rf_model3, data_test)
conf_matrix_rf3 <- confusionMatrix(pred_rf3, data_test$stunting)
## hasil
print(rf_model3)
print(conf_matrix_rf3)
# Model 3: Kernel polynomial dengan regularisasi
svm_model3 <- svm(stunting ~., data = data_train,
kernel = 'polynomial',
cost = 0.1,  # Margin lebih lebar
scale = TRUE,  # Scaling otomatis
class.weights = c("0" = 1, "1" = 1.5))  # Bobot kelas
# Prediksi dan Evaluasi
pred_svm3 <- predict(svm_model3, data_test)
conf_matrix_svm3 <- confusionMatrix(pred_svm3, data_test$stunting)
# Hasil model svm
print(svm_model3)
print(conf_matrix_svm3)
# Model 3: Kernel polynomial dengan regularisasi
svm_model3 <- svm(stunting ~., data = data_train,
kernel = 'polynomial',
cost = 0.5,  # Margin lebih lebar
scale = TRUE,  # Scaling otomatis
class.weights = c("0" = 1, "1" = 1.5))  # Bobot kelas
# Prediksi dan Evaluasi
pred_svm3 <- predict(svm_model3, data_test)
conf_matrix_svm3 <- confusionMatrix(pred_svm3, data_test$stunting)
# Hasil model svm
print(svm_model3)
print(conf_matrix_svm3)
svm_model3 <- svm(stunting ~., data = data_train,
kernel = 'radial',
cost = 0.5,  # Margin lebih lebar
scale = TRUE,  # Scaling otomatis
class.weights = c("0" = 1, "1" = 1.5))  # Bobot kelas
# Prediksi dan Evaluasi
pred_svm3 <- predict(svm_model3, data_test)
conf_matrix_svm3 <- confusionMatrix(pred_svm3, data_test$stunting)
# Hasil model svm
print(svm_model3)
print(conf_matrix_svm3)
# Library yang berisi kumpulan packages untuk analisis data
library(tidyverse)
# library untuk manipulasi data
library(dplyr)
# library untuk menampilkan hasil statistik deskriptif
library(summarytools)
# library untuk visualisasi data
library (ggplot2)
#Mengabungkan visualisasi
library(gridExtra)
# library untuk membaca data dari file Excel (.xlsx)
library(readxl)
library(caret)
#Correlation Matrix
library(corrplot)
# Visualisasi Correlation Matrix
library(ggcorrplot)
library(ranger)
library(randomForest)
library(pROC)
library(boot)
library(caTools)
library(e1071)
library(reshape2)
library(iml)
library(mlr)
library(FSelectorRcpp)
# skenario 3 = Regularisasi Ekstrem cost besar, gamma kecil (margin ketat, kompleksitas tinggi)
svm_model_linear3 <-svm(stunting ~., data = data_train,
kernel= 'linear',
cost = 100,
gamma = 1)
svm_model_radial3 <-svm(stunting ~., data = data_train,
kernel='radial',
cost = 100,
gamma = 1)
svm_model_polynomial3 <-svm(stunting ~., data = data_train,
kernel='polynomial',
cost = 100,
gamma = 1)
svm_model_sigmoid3 <-svm(stunting ~., data = data_train,
kernel='sigmoid',
cost = 100,
gamma = 1)
# Prediksi
pred_linear3 <- predict(svm_model_linear3, data_test)
pred_radial3 <- predict(svm_model_radial3, data_test)
pred_poly3 <- predict(svm_model_polynomial3, data_test)
pred_sigmoid3 <- predict(svm_model_sigmoid3, data_test)
# Evaluasi
conf_matrix_linear3 <- confusionMatrix(pred_linear3, data_test$stunting)
conf_matrix_radial3 <- confusionMatrix(pred_radial3, data_test$stunting)
conf_matrix_poly3 <- confusionMatrix(pred_poly3, data_test$stunting)
conf_matrix_sigmoid3 <- confusionMatrix(pred_sigmoid3, data_test$stunting)
# Hasil
print(svm_model_linear3)
print(svm_model_radial3)
print(svm_model_polynomial3)
print(svm_model_sigmoid3)
print(conf_matrix_linear3)
print(conf_matrix_radial3)
print(conf_matrix_poly3)
print(conf_matrix_sigmoid3)
