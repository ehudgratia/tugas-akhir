# Extract Metrics SVM
metrics_svm1 <- conf_matrix_svm1$byClass[c("Precision", "Recall", "F1")]
accuracy_svm1 <- conf_matrix_svm1$overall["Accuracy"]
metrics_svm2 <- conf_matrix_svm2$byClass[c("Precision", "Recall", "F1")]
accuracy_svm2 <- conf_matrix_svm2$overall["Accuracy"]
metrics_svm3 <- conf_matrix_svm3$byClass[c("Precision", "Recall", "F1")]
accuracy_svm3 <- conf_matrix_svm3$overall["Accuracy"]
# Gabungkan semua metrik ke dalam satu tibble
metrics_svm <- bind_rows(
tibble(Model = "svm_model1",
Metric = c("Precision", "Recall", "F1", "Accuracy"),
Value = c(conf_matrix_rf1$byClass[c("Precision", "Recall", "F1")],
conf_matrix_rf1$overall["Accuracy"])),
tibble(Model = "svm_model2",
Metric = c("Precision", "Recall", "F1", "Accuracy"),
Value = c(conf_matrix_rf2$byClass[c("Precision", "Recall", "F1")],
conf_matrix_rf2$overall["Accuracy"])),
tibble(Model = "svm_model3",
Metric = c("Precision", "Recall", "F1", "Accuracy"),
Value = c(conf_matrix_rf3$byClass[c("Precision", "Recall", "F1")],
conf_matrix_rf3$overall["Accuracy"]))
)
# Visualisasi
ggplot(metrics_svm, aes(x = Metric, y = Value, fill = Model)) +
geom_bar(stat = "identity", position = position_dodge(0.8), width = 0.7) +
geom_text(aes(label = round(Value, 3)),
position = position_dodge(0.8),
vjust = -0.5,
size = 3) +
labs(title = "Perbandingan Model Random Forest",
y = "Nilai Metrik",
x = "Metrix Evaluasi",
fill = "Model") +
theme_minimal()
# Extract Metrics SVM
metrics_svm1 <- conf_matrix_svm1$byClass[c("Precision", "Recall", "F1")]
accuracy_svm1 <- conf_matrix_svm1$overall["Accuracy"]
metrics_svm2 <- conf_matrix_svm2$byClass[c("Precision", "Recall", "F1")]
accuracy_svm2 <- conf_matrix_svm2$overall["Accuracy"]
metrics_svm3 <- conf_matrix_svm3$byClass[c("Precision", "Recall", "F1")]
accuracy_svm3 <- conf_matrix_svm3$overall["Accuracy"]
# Gabungkan semua metrik ke dalam satu tibble
metrics_svm <- bind_rows(
tibble(Model = "svm_model1",
Metric = c("Precision", "Recall", "F1", "Accuracy"),
Value = c(conf_matrix_svm1$byClass[c("Precision", "Recall", "F1")],
conf_matrix_svm1$overall["Accuracy"])),
tibble(Model = "svm_model2",
Metric = c("Precision", "Recall", "F1", "Accuracy"),
Value = c(conf_matrix_svm2$byClass[c("Precision", "Recall", "F1")],
conf_matrix_svm2$overall["Accuracy"])),
tibble(Model = "svm_model3",
Metric = c("Precision", "Recall", "F1", "Accuracy"),
Value = c(conf_matrix_svm3$byClass[c("Precision", "Recall", "F1")],
conf_matrix_svm3$overall["Accuracy"]))
)
# Visualisasi
ggplot(metrics_svm, aes(x = Metric, y = Value, fill = Model)) +
geom_bar(stat = "identity", position = position_dodge(0.8), width = 0.7) +
geom_text(aes(label = round(Value, 3)),
position = position_dodge(0.8),
vjust = -0.5,
size = 3) +
labs(title = "Perbandingan Model Random Forest",
y = "Nilai Metrik",
x = "Metrix Evaluasi",
fill = "Model") +
theme_minimal()
# Visualisasi
ggplot(metrics_svm, aes(x = Metric, y = Value, fill = Model)) +
geom_bar(stat = "identity", position = position_dodge(0.8), width = 0.7) +
geom_text(aes(label = round(Value, 3)),
position = position_dodge(0.8),
vjust = -0.5,
size = 3) +
labs(title = "Perbandingan Model Random Forest",
y = "Nilai Metrik",
x = "Metrix Evaluasi",
fill = "Model") +
theme_minimal()
# Extract Metrics SVM
metrics_svm1 <- conf_matrix_svm1$byClass[c("Precision", "Recall", "F1")]
accuracy_svm1 <- conf_matrix_svm1$overall["Accuracy"]
metrics_svm2 <- conf_matrix_svm2$byClass[c("Precision", "Recall", "F1")]
accuracy_svm2 <- conf_matrix_svm2$overall["Accuracy"]
metrics_svm3 <- conf_matrix_svm3$byClass[c("Precision", "Recall", "F1")]
accuracy_svm3 <- conf_matrix_svm3$overall["Accuracy"]
# Gabungkan semua metrik ke dalam satu tibble
metrics_svm <- bind_rows(
tibble(Model = "svm_model1",
Metric = c("Precision", "Recall", "F1", "Accuracy"),
Value = c(conf_matrix_svm1$byClass[c("Precision", "Recall", "F1")],
conf_matrix_svm1$overall["Accuracy"])),
tibble(Model = "svm_model2",
Metric = c("Precision", "Recall", "F1", "Accuracy"),
Value = c(conf_matrix_svm2$byClass[c("Precision", "Recall", "F1")],
conf_matrix_svm2$overall["Accuracy"])),
tibble(Model = "svm_model3",
Metric = c("Precision", "Recall", "F1", "Accuracy"),
Value = c(conf_matrix_svm3$byClass[c("Precision", "Recall", "F1")],
conf_matrix_svm3$overall["Accuracy"]))
)
# Visualisasi
ggplot(metrics_svm, aes(x = Metric, y = Value, fill = Model)) +
geom_bar(stat = "identity", position = position_dodge(0.8), width = 0.7) +
geom_text(aes(label = round(Value, 3)),
position = position_dodge(0.8),
vjust = -0.5,
size = 3) +
labs(title = "Perbandingan Model SVM",
y = "Nilai Metrik",
x = "Metrix Evaluasi",
fill = "Model") +
theme_minimal()
# Visualisasi
ggplot(metrics_rf, aes(x = Metric, y = Value, fill = Model)) +
geom_bar(stat = "identity", position = position_dodge(0.8), width = 0.7) +
geom_text(aes(label = round(Value, 3)),
position = position_dodge(0.8),
vjust = -0.5,
size = 3) +
labs(title = "Perbandingan Model Random Forest",
y = "Nilai Metrik",
x = "Metrix Evaluasi",
fill = "Model") +
theme_minimal()
# Visualisasi
ggplot(metrics_svm, aes(x = Metric, y = Value, fill = Model)) +
geom_bar(stat = "identity", position = position_dodge(0.8), width = 0.7) +
geom_text(aes(label = round(Value, 3)),
position = position_dodge(0.8),
vjust = -0.5,
size = 3) +
labs(title = "Perbandingan Model SVM",
y = "Nilai Metrik",
x = "Metrix Evaluasi",
fill = "Model") +
theme_minimal()
# Extract Metrics SVM
metrics_svm1 <- conf_matrix_svm1$byClass[c("Precision", "Recall", "F1")]
accuracy_svm1 <- conf_matrix_svm1$overall["Accuracy"]
metrics_svm2 <- conf_matrix_svm2$byClass[c("Precision", "Recall", "F1")]
accuracy_svm2 <- conf_matrix_svm2$overall["Accuracy"]
metrics_svm3 <- conf_matrix_svm3$byClass[c("Precision", "Recall", "F1")]
accuracy_svm3 <- conf_matrix_svm3$overall["Accuracy"]
# Gabungkan semua metrik ke dalam satu tibble
metrics_svm <- bind_rows(
tibble(Model = "svm_model1",
Metric = c("Recall", "Precision", "F1", "Accuracy"),
Value = c(conf_matrix_svm1$byClass[c("Precision", "Recall", "F1")],
conf_matrix_svm1$overall["Accuracy"])),
tibble(Model = "svm_model2",
Metric = c("Recall", "Precision", "F1", "Accuracy"),
Value = c(conf_matrix_svm2$byClass[c("Precision", "Recall", "F1")],
conf_matrix_svm2$overall["Accuracy"])),
tibble(Model = "svm_model3",
Metric = c("Recall", "Precision", "F1", "Accuracy"),
Value = c(conf_matrix_svm3$byClass[c("Precision", "Recall", "F1")],
conf_matrix_svm3$overall["Accuracy"]))
)
# Visualisasi
ggplot(metrics_svm, aes(x = Metric, y = Value, fill = Model)) +
geom_bar(stat = "identity", position = position_dodge(0.8), width = 0.7) +
geom_text(aes(label = round(Value, 3)),
position = position_dodge(0.8),
vjust = -0.5,
size = 3) +
labs(title = "Perbandingan Model SVM",
y = "Nilai Metrik",
x = "Metrix Evaluasi",
fill = "Model") +
theme_minimal()
# Extract Metrics RF
metrics_rf1 <- conf_matrix_rf1$byClass[c("Precision", "Recall", "F1_Score")]
accuracy_rf1 <- conf_matrix_rf1$overall["Accuracy"]
metrics_rf2 <- conf_matrix_rf2$byClass[c("Precision", "Recall", "F1_Score")]
accuracy_rf2 <- conf_matrix_rf2$overall["Accuracy"]
metrics_rf3 <- conf_matrix_rf3$byClass[c("Precision", "Recall", "F1_Score")]
accuracy_rf3 <- conf_matrix_rf3$overall["Accuracy"]
# Gabungkan semua metrik ke dalam satu tibble
metrics_rf <- bind_rows(
tibble(Model = "rf_model1",
Metric = c("Recall", "Precision", "F1", "Accuracy"),
Value = c(conf_matrix_rf1$byClass[c("Precision", "Recall", "F1_Score")],
conf_matrix_rf1$overall["Accuracy"])),
tibble(Model = "rf_model2",
Metric = c("Recall", "Precision", "F1", "Accuracy"),
Value = c(conf_matrix_rf2$byClass[c("Precision", "Recall", "F1_Score")],
conf_matrix_rf2$overall["Accuracy"])),
tibble(Model = "rf_model3",
Metric = c("Recall", "Precision", "F1", "Accuracy"),
Value = c(conf_matrix_rf3$byClass[c("Precision", "Recall", "F1_Score")],
conf_matrix_rf3$overall["Accuracy"]))
)
# Visualisasi
ggplot(metrics_rf, aes(x = Metric, y = Value, fill = Model)) +
geom_bar(stat = "identity", position = position_dodge(0.8), width = 0.7) +
geom_text(aes(label = round(Value, 3)),
position = position_dodge(0.8),
vjust = -0.5,
size = 3) +
labs(title = "Perbandingan Model Random Forest",
y = "Nilai Metrik",
x = "Metrix Evaluasi",
fill = "Model") +
theme_minimal()
# Extract Metrics RF
metrics_rf1 <- conf_matrix_rf1$byClass[c("Precision", "Recall", "F1")]
accuracy_rf1 <- conf_matrix_rf1$overall["Accuracy"]
metrics_rf2 <- conf_matrix_rf2$byClass[c("Precision", "Recall", "F1")]
accuracy_rf2 <- conf_matrix_rf2$overall["Accuracy"]
metrics_rf3 <- conf_matrix_rf3$byClass[c("Precision", "Recall", "F1")]
accuracy_rf3 <- conf_matrix_rf3$overall["Accuracy"]
# Gabungkan semua metrik ke dalam satu tibble
metrics_rf <- bind_rows(
tibble(Model = "rf_model1",
Metric = c("Recall", "Precision", "F1", "Accuracy"),
Value = c(conf_matrix_rf1$byClass[c("Precision", "Recall", "F1")],
conf_matrix_rf1$overall["Accuracy"])),
tibble(Model = "rf_model2",
Metric = c("Recall", "Precision", "F1", "Accuracy"),
Value = c(conf_matrix_rf2$byClass[c("Precision", "Recall", "F1")],
conf_matrix_rf2$overall["Accuracy"])),
tibble(Model = "rf_model3",
Metric = c("Recall", "Precision", "F1", "Accuracy"),
Value = c(conf_matrix_rf3$byClass[c("Precision", "Recall", "F1")],
conf_matrix_rf3$overall["Accuracy"]))
)
# Visualisasi
ggplot(metrics_rf, aes(x = Metric, y = Value, fill = Model)) +
geom_bar(stat = "identity", position = position_dodge(0.8), width = 0.7) +
geom_text(aes(label = round(Value, 3)),
position = position_dodge(0.8),
vjust = -0.5,
size = 3) +
labs(title = "Perbandingan Model Random Forest",
y = "Nilai Metrik",
x = "Metrix Evaluasi",
fill = "Model") +
theme_minimal()
# RF vs SVM
metrics_rf_svm <- tibble(
Metric = c("Accuracy", "Recall", "Precision", "F1-score"),
RF = c(accuracy_rf2, metrics_rf2),
SVM = c(accuracy_svm1, metrics_svm1)
) %>%
pivot_longer(cols = c(RF, SVM), names_to = "Model", values_to = "Value")
# Visualisasi
ggplot(metrics_rf_svm, aes(x = Metric, y = Value, fill = Model)) +
geom_col(position = position_dodge(width = 0.7), width = 0.6) +
geom_text(aes(label = round(Value, 3)),
position = position_dodge(width = 0.7),
vjust = -0.5, size = 3) +
scale_fill_manual(values = c("RF" = "#1b9e77", "SVM" = "#d95f02")) +
labs(title = "Perbandingan Kinerja Model rf_model2 vs svm_model2",
y = "Nilai Metrik", x = "Metrik Evaluasi") +
theme_minimal()
View(metrics_rf_svm)
# RF vs SVM
metrics_rf_svm <- tibble(
Metric = c("Accuracy", "Recall", "Precision", "F1-score"),
RF = c(accuracy_rf2, metrics_rf2),
SVM = c(accuracy_svm1, metrics_svm1)
) %>%
pivot_longer(cols = c(RF, SVM), names_to = "Model", values_to = "Value")
# Visualisasi
ggplot(metrics_rf_svm, aes(x = Metric, y = Value, fill = Model)) +
geom_col(position = position_dodge(width = 0.7), width = 0.6) +
geom_text(aes(label = round(Value, 3)),
position = position_dodge(width = 0.7),
vjust = -0.5, size = 3) +
scale_fill_manual(values = c("RF" = "#1b9e77", "SVM" = "#d95f02")) +
labs(title = "Perbandingan Kinerja Model rf_model2 vs svm_model2",
y = "Nilai Metrik", x = "Metrik Evaluasi") +
theme_minimal()
# RF vs SVM
metrics_rf_svm <- tibble(
Metric = c("Accuracy", "Recall", "Precision", "F1-score"),
RF = c(accuracy_rf2, metrics_rf2),
SVM = c(accuracy_svm1, metrics_svm1)
) %>%
pivot_longer(cols = c(RF, SVM), names_to = "Model", values_to = "Value")
# Visualisasi
ggplot(metrics_rf_svm, aes(x = Metric, y = Value, fill = Model)) +
geom_col(position = position_dodge(width = 0.7), width = 0.6) +
geom_text(aes(label = round(Value, 3)),
position = position_dodge(width = 0.7),
vjust = -0.5, size = 3) +
scale_fill_manual(values = c("RF" = "#1b9e77", "SVM" = "#d95f02")) +
labs(title = "Perbandingan Kinerja Random Forest vs SVM",
y = "Nilai Metrik",
x = "Metrik Evaluasi") +
theme_minimal()
# Buat prediktor untuk model RF
predictor_rf2 <- Predictor$new(
model = rf_model2,
data = test_final[, -which(names(test_final) == "stunting")],
y = test_final$stunting
)
# Hitung Permutation Importance
imp_rf2 <- FeatureImp$new(predictor_rf, loss = "ce")
# Buat objek prediktor
predictor_svm1 <- Predictor$new(
model = svm_model1,
data = test_final[, -which(names(test_final) == "stunting")],  # semua fitur
y = test_final$stunting
)
# Hitung feature importance dengan Permutation
imp_svm1 <- FeatureImp$new(predictor_svm1, loss = "ce")
# Ambil hasil importance dari model
df_rf2 <- as.data.frame(imp_rf2$results)
df_svm1 <- as.data.frame(imp_svm1$results)
# Contoh plot importance untuk Random Forest
p39 <- ggplot(df_rf2, aes(x = reorder(feature, importance), y = importance)) +
geom_bar(stat = "identity", fill = "blue") +
coord_flip() +
labs(title = "Permutation\nFeature Importance\nrf_model1",
x = "Fitur",
y = "Importance (Penurunan Akurasi)") +
theme_minimal()
# Contoh plot importance untuk SVM
p40 <- ggplot(df_svm1, aes(x = reorder(feature, importance), y = importance)) +
geom_bar(stat = "identity", fill = "blue") +
coord_flip() +
labs(title = "Permutation\nFeature Importance\nsvm_model1",
x = "Fitur",
y = "Importance (Penurunan Akurasi)") +
theme_minimal()
grid.arrange(p39, p40, ncol = 2)
View(df_rf2)
# Contoh plot importance untuk Random Forest
p39 <- ggplot(df_rf2, aes(x = reorder(feature, importance), y = importance)) +
geom_bar(stat = "identity", fill = "blue") +
coord_flip() +
labs(title = "Permutation\nFeature Importance\Random Forest",
x = "Fitur",
y = "Importance (Penurunan Akurasi)") +
theme_minimal()
# Contoh plot importance untuk SVM
p40 <- ggplot(df_svm1, aes(x = reorder(feature, importance), y = importance)) +
geom_bar(stat = "identity", fill = "blue") +
coord_flip() +
labs(title = "Permutation\nFeature Importance\SVM",
x = "Fitur",
y = "Importance (Penurunan Akurasi)") +
theme_minimal()
grid.arrange(p39, p40, ncol = 2)
View(df_svm1)
# Contoh plot importance untuk Random Forest
p39 <- ggplot(df_rf2, aes(x = reorder(feature, importance), y = importance)) +
geom_bar(stat = "identity", fill = "blue") +
coord_flip() +
labs(title = "Permutation\nFeature Importance\Random Forest",
x = "Fitur",
y = "Importance (Penurunan Akurasi)") +
theme_minimal()
# Contoh plot importance untuk SVM
p40 <- ggplot(df_svm1, aes(x = reorder(feature, importance), y = importance)) +
geom_bar(stat = "identity", fill = "blue") +
coord_flip() +
labs(title = "Permutation\nFeature Importance\SVM",
x = "Fitur",
y = "Importance (Penurunan Akurasi)") +
theme_minimal()
grid.arrange(p39, p40, ncol = 2)
# Library yang berisi kumpulan packages untuk analisis data
library(tidyverse)
# library untuk manipulasi data
library(dplyr)
# library untuk manipulasi data tanggal
library(lubridate)
# library untuk menampilkan hasil statistik deskriptif
library(summarytools)
# library untuk visualisasi data
library (ggplot2)
#Mengabungkan visualisasi
library(gridExtra)
# library untuk membaca data dari file Excel (.xlsx)
library(readxl)
library(caret)
#PCA
library(FactoMineR)
#visualisasi PCA
library(factoextra)
#Correlation Matrix
library(corrplot)
# Visualisasi Correlation Matrix
library(ggcorrplot)
library(ranger)
library(randomForest)
library(pROC)
library(boot)
library(caTools)
library(e1071)
library(reshape2)
library(iml)
library(mlr)
# Buat prediktor untuk model RF
predictor_rf2 <- Predictor$new(
model = rf_model2,
data = test_final[, -which(names(test_final) == "stunting")],
y = test_final$stunting
)
# Hitung Permutation Importance
imp_rf2 <- FeatureImp$new(predictor_rf, loss = "ce")
# Buat objek prediktor
predictor_svm1 <- Predictor$new(
model = svm_model1,
data = test_final[, -which(names(test_final) == "stunting")],  # semua fitur
y = test_final$stunting
)
# Hitung feature importance dengan Permutation
imp_svm1 <- FeatureImp$new(predictor_svm1, loss = "ce")
# Ambil hasil importance dari model
df_rf2 <- as.data.frame(imp_rf2$results)
df_svm1 <- as.data.frame(imp_svm1$results)
# Contoh plot importance untuk Random Forest
p39 <- ggplot(df_rf2, aes(x = reorder(feature, importance), y = importance)) +
geom_bar(stat = "identity", fill = "blue") +
coord_flip() +
labs(title = "Permutation\nFeature Importance\Random Forest",
x = "Fitur",
y = "Importance (Penurunan Akurasi)") +
theme_minimal()
# Contoh plot importance untuk SVM
p40 <- ggplot(df_svm1, aes(x = reorder(feature, importance), y = importance)) +
geom_bar(stat = "identity", fill = "blue") +
coord_flip() +
labs(title = "Permutation\nFeature Importance\SVM",
x = "Fitur",
y = "Importance (Penurunan Akurasi)") +
theme_minimal()
grid.arrange(p39, p40, ncol = 2)
# Hitung Permutation Importance
imp_rf2 <- FeatureImp$new(predictor_rf2, loss = "ce")
# Hitung Permutation Importance
imp_rf2 <- FeatureImp$new(predictor_rf2, loss = "ce")
# Ambil hasil importance dari model
df_rf2 <- as.data.frame(imp_rf2$results)
# Ambil hasil importance dari model
df_rf2 <- as.data.frame(imp_rf2$results)
# Contoh plot importance untuk Random Forest
p39 <- ggplot(df_rf2, aes(x = reorder(feature, importance), y = importance)) +
geom_bar(stat = "identity", fill = "blue") +
coord_flip() +
labs(title = "Permutation\nFeature Importance\nRandom Forest",
x = "Fitur",
y = "Importance (Penurunan Akurasi)") +
theme_minimal()
# Contoh plot importance untuk SVM
p40 <- ggplot(df_svm1, aes(x = reorder(feature, importance), y = importance)) +
geom_bar(stat = "identity", fill = "blue") +
coord_flip() +
labs(title = "Permutation\nFeature Importance\nSVM",
x = "Fitur",
y = "Importance (Penurunan Akurasi)") +
theme_minimal()
grid.arrange(p39, p40, ncol = 2)
View(df_rf2)
View(df_svm1)
# importance untuk SVM
p40 <- ggplot(df_svm1, aes(x = reorder(feature, importance), y = importance)) +
geom_bar(stat = "identity", fill = "salmon") +
coord_flip() +
scale_y_continuous(
limits = c(0, upper_limit),
breaks = seq(0, upper_limit, by = 1)  # Interval sama
) +
labs(
title = "Permutation Feature Importance\nSVM",
x = "Fitur",
y = "Importance (Penurunan Akurasi)"
) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
grid.arrange(p39, p40, ncol = 2)
# importance untuk Random Forest
ggplot(df_rf2, aes(x = reorder(feature, importance), y = importance)) +
geom_bar(stat = "identity", fill = "blue") +
coord_flip() +
labs(title = "Permutation\nFeature Importance\nRandom Forest",
x = "Fitur",
y = "Importance (Penurunan Akurasi)") +
theme_minimal()
# importance untuk SVM
ggplot(df_svm1, aes(x = reorder(feature, importance), y = importance)) +
geom_bar(stat = "identity", fill = "blue") +
coord_flip() +
labs(
title = "Permutation Feature Importance\nSVM",
x = "Fitur",
y = "Importance (Penurunan Akurasi)"
) +
theme_minimal()
# importance untuk Random Forest
ggplot(df_rf2, aes(x = reorder(feature, importance), y = importance)) +
geom_bar(stat = "identity", fill = "blue") +
coord_flip() +
labs(title = "Permutation\nFeature Importance\nRandom Forest",
x = "Fitur",
y = "Importance (Penurunan Akurasi)") +
theme_minimal()
# importance untuk SVM
ggplot(df_svm1, aes(x = reorder(feature, importance), y = importance)) +
geom_bar(stat = "identity", fill = "blue") +
coord_flip() +
labs(
title = "Permutation Feature Importance\nSVM",
x = "Fitur",
y = "Importance (Penurunan Akurasi)"
) +
theme_minimal()
